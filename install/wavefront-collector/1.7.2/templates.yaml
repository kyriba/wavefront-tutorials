---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# Source: wavefront/templates/collector-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: collector
  name: wavefront-collector-collector
  namespace: monitoring
---
# Source: wavefront/templates/api-token-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: collector
  name: wavefront-collector
  namespace: monitoring
type: Opaque
stringData:
  api-token: "$WAVEFRONT_TOKEN"
---
# Source: wavefront/templates/collector-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: collector
  name: wavefront-collector-collector-config
  namespace: monitoring
data:
  config.yaml: |
    clusterName: $CLUSTER_NAME
    enableDiscovery: true
    enableEvents: false
    defaultCollectionInterval: 60s
    flushInterval: 10s
    sinkExportDataTimeout: 20s

    sinks:
    - proxyAddress: wavefront-collector-proxy:2878
      filters:
        metricDenyList:
        - kubernetes.sys_container.*
        - kubernetes.collector.runtime.*
        - kubernetes.*.network.rx_rate
        - kubernetes.*.network.rx_errors_rate
        - kubernetes.*.network.tx_rate
        - kubernetes.*.network.tx_errors_rate
        - kubernetes.*.memory.page_faults
        - kubernetes.*.memory.page_faults_rate
        - kubernetes.*.memory.major_page_faults
        - kubernetes.*.memory.major_page_faults_rate
        - kubernetes.*.filesystem.inodes
        - kubernetes.*.filesystem.inodes_free
        - kubernetes.*.ephemeral_storage.request
        - kubernetes.*.ephemeral_storage.limit
        tagExclude:
        - label?controller?revision*
        - label?pod?template*
        - annotation_kubectl_kubernetes_io_last_applied_configuration

    sources:
      kubernetes_source:
        url: https://kubernetes.default.svc
        kubeletPort: 10250
        kubeletHttps: true
        useServiceAccount: true
        insecure: true
        prefix: kubernetes.
        filters:
          metricBlacklist:
          - 'kubernetes.sys_container.*'
          - 'kubernetes.node.ephemeral_storage.*'

      internal_stats_source:
        prefix: kubernetes.
        
      kubernetes_state_source:
        prefix: kubernetes.
      

    discovery:
      enable_runtime_plugins: true

      plugins:

      # auto-discover kube DNS
      - name: kube-dns-discovery
        type: prometheus
        selectors:
          images:
          - '*kube-dns/sidecar*'
          labels:
            k8s-app:
            - kube-dns
        port: 10054
        path: /metrics
        scheme: http
        prefix: kube.dns.
        filters:
          metricWhitelist:
          - 'kube.dns.http.request.duration.microseconds'
          - 'kube.dns.http.request.size.bytes'
          - 'kube.dns.http.requests.total.counter'
          - 'kube.dns.http.response.size.bytes'
          - 'kube.dns.kubedns.dnsmasq.*'
          - 'kube.dns.process.*'

      # auto-discover coredns
      - name: coredns-discovery
        type: prometheus
        selectors:
          images:
          - '*coredns:*'
          labels:
            k8s-app:
            - kube-dns
        port: 9153
        path: /metrics
        scheme: http
        prefix: kube.coredns.
        filters:
          metricWhitelist:
          - 'kube.coredns.coredns.cache.*'
          - 'kube.coredns.coredns.dns.request.count.total.counter'
          - 'kube.coredns.coredns.dns.request.duration.seconds'
          - 'kube.coredns.coredns.dns.request.size.bytes'
          - 'kube.coredns.coredns.dns.request.type.count.total.counter'
          - 'kube.coredns.coredns.dns.response.rcode.count.total.counter'
          - 'kube.coredns.coredns.dns.response.size.bytes'
          - 'kube.coredns.process.*'
---
# Source: wavefront/templates/collector-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: collector
    kubernetes.io/bootstrapping: rbac-defaults
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: wavefront-collector-collector
  namespace: monitoring
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - nodes
  - nodes/proxy
  - nodes/stats
  - nodes/metrics
  - pods
  - replicationcontrollers
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - update
  - create
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- nonResourceURLs: ["/metrics"]
  verbs:
  - get
---
# Source: wavefront/templates/collector-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: collector
  name: wavefront-collector-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wavefront-collector-collector
subjects:
- kind: ServiceAccount
  name: wavefront-collector-collector
  namespace: monitoring
---
# Source: wavefront/templates/proxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: proxy
  name: wavefront-collector-proxy
  namespace: monitoring
spec:
  ports:
  - name: wavefront
    port: 2878
    protocol: TCP
  selector:
    app.kubernetes.io/name : wavefront-collector
    app.kubernetes.io/component: proxy
  type: ClusterIP
---
# Source: wavefront/templates/collector-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: collector
  name: wavefront-collector-collector
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name : wavefront-collector
      app.kubernetes.io/component: collector

  template:
    metadata:
      labels:
        app.kubernetes.io/name : wavefront-collector
        app.kubernetes.io/component: collector
      annotations:
        installation-method: helm
    spec:
      tolerations:
      - effect: NoSchedule
        key: node.alpha.kubernetes.io/role
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists

      serviceAccountName: wavefront-collector-collector
      containers:
      - name: wavefront-collector
        image: projects.registry.vmware.com/tanzu_observability/kubernetes-collector:1.7.1
        imagePullPolicy: IfNotPresent
        command:
        - /wavefront-collector
        - --daemon=true
        - --config-file=/etc/collector/config.yaml
        env:
        - name: HOST_PROC
          value: /host/proc
        - name: POD_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTALLATION_METHOD
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations['installation-method']
        ports:
        - containerPort: 8088
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 10Mi
        volumeMounts:
        - name: procfs
          mountPath: /host/proc
          readOnly: true
        - name: config
          mountPath: /etc/collector/
          readOnly: true
      volumes:
      - name: procfs
        hostPath:
          path: /proc
      - name: config
        configMap:
          name: wavefront-collector-collector-config
---
# Source: wavefront/templates/proxy-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name : wavefront-collector
    helm.sh/chart: wavefront-1.7.2
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io.instance: "wavefront-collector"
    app.kubernetes.io/component: proxy
  name: wavefront-collector-proxy
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name : wavefront-collector
      app.kubernetes.io/component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name : wavefront-collector
        app.kubernetes.io/component: proxy
    spec:
      containers:
      - name: wavefront-proxy
        image: projects.registry.vmware.com/tanzu_observability/proxy:10.7
        imagePullPolicy: IfNotPresent
        env:
        - name: WAVEFRONT_URL
          value: $WAVEFRONT_URL
        - name: WAVEFRONT_TOKEN
          valueFrom:
            secretKeyRef:
              name: wavefront-collector
              key: api-token
        - name: WAVEFRONT_PROXY_ARGS
          value: 
        ports:
        - containerPort: 2878
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 1Gi
        securityContext:
          privileged: false
        volumeMounts:
      volumes:

